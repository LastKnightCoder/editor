on:
  push:
    tags:
      - v*

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `app-v${process.env.PACKAGE_VERSION}`,
              name: `Card Editor v${process.env.PACKAGE_VERSION}`,
              body: '可见即所得编辑器',
              draft: true,
              prerelease: false
            })
            return data.id

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

#      - uses: pnpm/action-setup@v2
#        name: Install pnpm
#        with:
#          version: 8
#          run_install: false
#
#      - name: setup node
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16
#          cache: 'pnpm'
#
#      - name: install Rust stable
#        uses: dtolnay/rust-toolchain@stable
#
#      - name: Rust cache
#        uses: swatinem/rust-cache@v2
#        with:
#          workspaces: './src-tauri -> target'
#
#      - name: install dependencies (ubuntu only)
#        if: matrix.platform == 'ubuntu-20.04'
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
#
#      - name: install frontend dependencies
#        run: pnpm install --no-frozen-lockfile

#      - uses: tauri-apps/tauri-action@v0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NODE_OPTIONS: "--max_old_space_size=4096"
#          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
#          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
#        with:
#          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri]

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'
      - name: install frontend dependencies
        run: pnpm install --no-frozen-lockfile
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            import updatelog from './scripts/updatelog.js'
            const pkg = require('./package.json')
            const tag = `v${pkg.version}`
            const notes = updatelog(tag)
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              notes,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
